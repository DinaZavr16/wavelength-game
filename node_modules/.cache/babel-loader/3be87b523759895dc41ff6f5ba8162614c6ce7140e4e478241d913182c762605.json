{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinaf\\\\wavelength-app-new\\\\src\\\\components\\\\GameBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./GameBoard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = ({\n  targetAngle,\n  isTargetVisible,\n  onGuess\n}) => {\n  _s();\n  const [needleAngle, setNeedleAngle] = useState(0);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [hasSpun, setHasSpun] = useState(false);\n  const [spectrumAngle, setSpectrumAngle] = useState(targetAngle);\n  const needleContainerRef = useRef(null);\n  useEffect(() => {\n    const handleStart = e => {\n      if (!isTargetVisible && hasSpun) {\n        setIsDragging(true);\n        e.preventDefault();\n      }\n    };\n    const handleMove = e => {\n      if (!isDragging || isTargetVisible) return;\n      e.preventDefault();\n      const rect = needleContainerRef.current.getBoundingClientRect();\n      const centerX = rect.left + rect.width / 2;\n      const centerY = rect.bottom;\n      let clientX, clientY;\n      if (e.type === \"touchmove\") {\n        clientX = e.touches[0].clientX;\n        clientY = e.touches[0].clientY;\n      } else {\n        clientX = e.clientX;\n        clientY = e.clientY;\n      }\n      const angle = Math.atan2(clientX - centerX, centerY - clientY) * 180 / Math.PI;\n      const clampedAngle = Math.max(-90, Math.min(90, angle));\n      setNeedleAngle(clampedAngle);\n      onGuess(clampedAngle);\n    };\n    const handleEnd = () => {\n      setIsDragging(false);\n    };\n    const needleContainer = needleContainerRef.current;\n    if (needleContainer) {\n      needleContainer.addEventListener(\"mousedown\", handleStart);\n      document.addEventListener(\"mousemove\", handleMove);\n      document.addEventListener(\"mouseup\", handleEnd);\n      needleContainer.addEventListener(\"touchstart\", handleStart);\n      document.addEventListener(\"touchmove\", handleMove);\n      document.addEventListener(\"touchend\", handleEnd);\n    }\n    return () => {\n      if (needleContainer) {\n        needleContainer.removeEventListener(\"mousedown\", handleStart);\n        document.removeEventListener(\"mousemove\", handleMove);\n        document.removeEventListener(\"mouseup\", handleEnd);\n        needleContainer.removeEventListener(\"touchstart\", handleStart);\n        document.removeEventListener(\"touchmove\", handleMove);\n        document.removeEventListener(\"touchend\", handleEnd);\n      }\n    };\n  }, [isDragging, isTargetVisible, onGuess, hasSpun]);\n  const handleSpin = () => {\n    if (isSpinning) return;\n    setIsSpinning(true);\n    setHasSpun(false);\n\n    // Start with current angle and spin multiple times\n    let startAngle = spectrumAngle;\n    let spins = 0;\n    const totalSpins = 3;\n    const spinInterval = setInterval(() => {\n      startAngle += 20;\n      setSpectrumAngle(startAngle);\n      if (startAngle >= 360 * (spins + 1)) {\n        spins++;\n        if (spins >= totalSpins) {\n          clearInterval(spinInterval);\n          setSpectrumAngle(targetAngle);\n          setIsSpinning(false);\n          setHasSpun(true);\n        }\n      }\n    }, 50);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"target-area\",\n      style: {\n        display: hasSpun || isSpinning ? \"block\" : \"none\",\n        background: `conic-gradient(\n            from -90deg at 50% 100%,\n            #a4b0be 0deg ${spectrumAngle - 22.5 + 90}deg,\n            #ff6b6b ${spectrumAngle - 22.5 + 90}deg ${spectrumAngle - 13.5 + 90}deg,\n            #feca57 ${spectrumAngle - 13.5 + 90}deg ${spectrumAngle - 4.5 + 90}deg,\n            #48dbfb ${spectrumAngle - 4.5 + 90}deg ${spectrumAngle + 4.5 + 90}deg,\n            #feca57 ${spectrumAngle + 4.5 + 90}deg ${spectrumAngle + 13.5 + 90}deg,\n            #ff6b6b ${spectrumAngle + 13.5 + 90}deg ${spectrumAngle + 22.5 + 90}deg,\n            #a4b0be ${spectrumAngle + 22.5 + 90}deg 180deg\n          )`,\n        transition: isSpinning ? 'none' : 'background 0.3s ease'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), !hasSpun && !isSpinning && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"spin-button\",\n      onClick: handleSpin,\n      children: \"Spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"needle-container\",\n      ref: needleContainerRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"needle\",\n        style: {\n          transform: `rotate(${needleAngle}deg)`,\n          display: hasSpun && !isTargetVisible ? \"block\" : \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"W8kw4YgdRyjQtPl6yPtUb7cKp6Y=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","GameBoard","targetAngle","isTargetVisible","onGuess","_s","needleAngle","setNeedleAngle","isDragging","setIsDragging","isSpinning","setIsSpinning","hasSpun","setHasSpun","spectrumAngle","setSpectrumAngle","needleContainerRef","handleStart","e","preventDefault","handleMove","rect","current","getBoundingClientRect","centerX","left","width","centerY","bottom","clientX","clientY","type","touches","angle","Math","atan2","PI","clampedAngle","max","min","handleEnd","needleContainer","addEventListener","document","removeEventListener","handleSpin","startAngle","spins","totalSpins","spinInterval","setInterval","clearInterval","className","children","style","display","background","transition","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","transform","_c","$RefreshReg$"],"sources":["C:/Users/dinaf/wavelength-app-new/src/components/GameBoard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./GameBoard.css\";\r\n\r\nconst GameBoard = ({ targetAngle, isTargetVisible, onGuess }) => {\r\n  const [needleAngle, setNeedleAngle] = useState(0);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isSpinning, setIsSpinning] = useState(false);\r\n  const [hasSpun, setHasSpun] = useState(false);\r\n  const [spectrumAngle, setSpectrumAngle] = useState(targetAngle);\r\n  const needleContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleStart = (e) => {\r\n      if (!isTargetVisible && hasSpun) {\r\n        setIsDragging(true);\r\n        e.preventDefault();\r\n      }\r\n    };\r\n\r\n    const handleMove = (e) => {\r\n      if (!isDragging || isTargetVisible) return;\r\n      e.preventDefault();\r\n\r\n      const rect = needleContainerRef.current.getBoundingClientRect();\r\n      const centerX = rect.left + rect.width / 2;\r\n      const centerY = rect.bottom;\r\n\r\n      let clientX, clientY;\r\n      if (e.type === \"touchmove\") {\r\n        clientX = e.touches[0].clientX;\r\n        clientY = e.touches[0].clientY;\r\n      } else {\r\n        clientX = e.clientX;\r\n        clientY = e.clientY;\r\n      }\r\n\r\n      const angle =\r\n        (Math.atan2(clientX - centerX, centerY - clientY) * 180) / Math.PI;\r\n      const clampedAngle = Math.max(-90, Math.min(90, angle));\r\n      setNeedleAngle(clampedAngle);\r\n      onGuess(clampedAngle);\r\n    };\r\n\r\n    const handleEnd = () => {\r\n      setIsDragging(false);\r\n    };\r\n\r\n    const needleContainer = needleContainerRef.current;\r\n    if (needleContainer) {\r\n      needleContainer.addEventListener(\"mousedown\", handleStart);\r\n      document.addEventListener(\"mousemove\", handleMove);\r\n      document.addEventListener(\"mouseup\", handleEnd);\r\n      needleContainer.addEventListener(\"touchstart\", handleStart);\r\n      document.addEventListener(\"touchmove\", handleMove);\r\n      document.addEventListener(\"touchend\", handleEnd);\r\n    }\r\n\r\n    return () => {\r\n      if (needleContainer) {\r\n        needleContainer.removeEventListener(\"mousedown\", handleStart);\r\n        document.removeEventListener(\"mousemove\", handleMove);\r\n        document.removeEventListener(\"mouseup\", handleEnd);\r\n        needleContainer.removeEventListener(\"touchstart\", handleStart);\r\n        document.removeEventListener(\"touchmove\", handleMove);\r\n        document.removeEventListener(\"touchend\", handleEnd);\r\n      }\r\n    };\r\n  }, [isDragging, isTargetVisible, onGuess, hasSpun]);\r\n\r\n  const handleSpin = () => {\r\n    if (isSpinning) return;\r\n    \r\n    setIsSpinning(true);\r\n    setHasSpun(false);\r\n    \r\n    // Start with current angle and spin multiple times\r\n    let startAngle = spectrumAngle;\r\n    let spins = 0;\r\n    const totalSpins = 3;\r\n    const spinInterval = setInterval(() => {\r\n      startAngle += 20;\r\n      setSpectrumAngle(startAngle);\r\n      \r\n      if (startAngle >= 360 * (spins + 1)) {\r\n        spins++;\r\n        if (spins >= totalSpins) {\r\n          clearInterval(spinInterval);\r\n          setSpectrumAngle(targetAngle);\r\n          setIsSpinning(false);\r\n          setHasSpun(true);\r\n        }\r\n      }\r\n    }, 50);\r\n  };\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      <div\r\n        className=\"target-area\"\r\n        style={{\r\n          display: hasSpun || isSpinning ? \"block\" : \"none\",\r\n          background: `conic-gradient(\r\n            from -90deg at 50% 100%,\r\n            #a4b0be 0deg ${spectrumAngle - 22.5 + 90}deg,\r\n            #ff6b6b ${spectrumAngle - 22.5 + 90}deg ${spectrumAngle - 13.5 + 90}deg,\r\n            #feca57 ${spectrumAngle - 13.5 + 90}deg ${spectrumAngle - 4.5 + 90}deg,\r\n            #48dbfb ${spectrumAngle - 4.5 + 90}deg ${spectrumAngle + 4.5 + 90}deg,\r\n            #feca57 ${spectrumAngle + 4.5 + 90}deg ${spectrumAngle + 13.5 + 90}deg,\r\n            #ff6b6b ${spectrumAngle + 13.5 + 90}deg ${spectrumAngle + 22.5 + 90}deg,\r\n            #a4b0be ${spectrumAngle + 22.5 + 90}deg 180deg\r\n          )`,\r\n          transition: isSpinning ? 'none' : 'background 0.3s ease',\r\n        }}\r\n      />\r\n      {!hasSpun && !isSpinning && (\r\n        <button className=\"spin-button\" onClick={handleSpin}>\r\n          Spin\r\n        </button>\r\n      )}\r\n      <div className=\"needle-container\" ref={needleContainerRef}>\r\n        <div\r\n          className=\"needle\"\r\n          style={{\r\n            transform: `rotate(${needleAngle}deg)`,\r\n            display: (hasSpun && !isTargetVisible) ? \"block\" : \"none\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}