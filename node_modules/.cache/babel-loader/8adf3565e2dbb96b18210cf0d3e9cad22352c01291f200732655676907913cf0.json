{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinaf\\\\wavelength-app-new\\\\src\\\\components\\\\SpectrumArc.js\";\nimport React from \"react\";\nimport \"./SpectrumArc.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpectrumArc = ({\n  targetPosition,\n  guessPosition,\n  isTargetVisible,\n  onGuess\n}) => {\n  const colors = [\"#FF6B6B\", \"#FF8E53\", \"#FFD166\", \"#06D6A0\", \"#118AB2\", \"#073B4C\", \"#EF476F\", \"#FFD166\", \"#06D6A0\", \"#118AB2\"];\n  const handleClick = e => {\n    if (!isTargetVisible && onGuess) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      const angle = Math.atan2(y - rect.height, x - rect.width / 2);\n      const normalizedAngle = (angle + Math.PI / 2) / Math.PI;\n      onGuess(Math.max(0, Math.min(1, normalizedAngle)));\n    }\n  };\n  const getWedgeStyle = index => {\n    const totalWedges = colors.length;\n    const angle = Math.PI / totalWedges;\n    const startAngle = index * angle;\n    const endAngle = (index + 1) * angle;\n    return {\n      clipPath: `path('M 50 100 L ${50 + 50 * Math.cos(startAngle)} ${100 - 50 * Math.sin(startAngle)} A 50 50 0 0 1 ${50 + 50 * Math.cos(endAngle)} ${100 - 50 * Math.sin(endAngle)} Z')`,\n      transform: `translate(-50%, -50%)`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spectrum-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spectrum-arc\",\n      onClick: handleClick,\n      children: [colors.map((color, index) => {\n        const isTarget = isTargetVisible && targetPosition >= index / colors.length && targetPosition < (index + 1) / colors.length;\n        const isGuess = !isTargetVisible && guessPosition >= index / colors.length && guessPosition < (index + 1) / colors.length;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `wedge ${isTarget ? \"target\" : \"\"} ${isGuess ? \"guess\" : \"\"}`,\n          style: {\n            ...getWedgeStyle(index),\n            backgroundColor: isTargetVisible ? color : \"#f0f0f0\"\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      }), !isTargetVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guess-arrow\",\n        style: {\n          transform: `rotate(${guessPosition * Math.PI}rad)`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = SpectrumArc;\nexport default SpectrumArc;\nvar _c;\n$RefreshReg$(_c, \"SpectrumArc\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SpectrumArc","targetPosition","guessPosition","isTargetVisible","onGuess","colors","handleClick","e","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","angle","Math","atan2","height","width","normalizedAngle","PI","max","min","getWedgeStyle","index","totalWedges","length","startAngle","endAngle","clipPath","cos","sin","transform","className","children","onClick","map","color","isTarget","isGuess","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dinaf/wavelength-app-new/src/components/SpectrumArc.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./SpectrumArc.css\";\r\n\r\nconst SpectrumArc = ({\r\n  targetPosition,\r\n  guessPosition,\r\n  isTargetVisible,\r\n  onGuess,\r\n}) => {\r\n  const colors = [\r\n    \"#FF6B6B\",\r\n    \"#FF8E53\",\r\n    \"#FFD166\",\r\n    \"#06D6A0\",\r\n    \"#118AB2\",\r\n    \"#073B4C\",\r\n    \"#EF476F\",\r\n    \"#FFD166\",\r\n    \"#06D6A0\",\r\n    \"#118AB2\",\r\n  ];\r\n\r\n  const handleClick = (e) => {\r\n    if (!isTargetVisible && onGuess) {\r\n      const rect = e.currentTarget.getBoundingClientRect();\r\n      const x = e.clientX - rect.left;\r\n      const y = e.clientY - rect.top;\r\n      const angle = Math.atan2(y - rect.height, x - rect.width / 2);\r\n      const normalizedAngle = (angle + Math.PI / 2) / Math.PI;\r\n      onGuess(Math.max(0, Math.min(1, normalizedAngle)));\r\n    }\r\n  };\r\n\r\n  const getWedgeStyle = (index) => {\r\n    const totalWedges = colors.length;\r\n    const angle = Math.PI / totalWedges;\r\n    const startAngle = index * angle;\r\n    const endAngle = (index + 1) * angle;\r\n\r\n    return {\r\n      clipPath: `path('M 50 100 L ${50 + 50 * Math.cos(startAngle)} ${\r\n        100 - 50 * Math.sin(startAngle)\r\n      } A 50 50 0 0 1 ${50 + 50 * Math.cos(endAngle)} ${\r\n        100 - 50 * Math.sin(endAngle)\r\n      } Z')`,\r\n      transform: `translate(-50%, -50%)`,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"spectrum-container\">\r\n      <div className=\"spectrum-arc\" onClick={handleClick}>\r\n        {colors.map((color, index) => {\r\n          const isTarget =\r\n            isTargetVisible &&\r\n            targetPosition >= index / colors.length &&\r\n            targetPosition < (index + 1) / colors.length;\r\n          const isGuess =\r\n            !isTargetVisible &&\r\n            guessPosition >= index / colors.length &&\r\n            guessPosition < (index + 1) / colors.length;\r\n\r\n          return (\r\n            <div\r\n              key={index}\r\n              className={`wedge ${isTarget ? \"target\" : \"\"} ${\r\n                isGuess ? \"guess\" : \"\"\r\n              }`}\r\n              style={{\r\n                ...getWedgeStyle(index),\r\n                backgroundColor: isTargetVisible ? color : \"#f0f0f0\",\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n        {!isTargetVisible && (\r\n          <div\r\n            className=\"guess-arrow\"\r\n            style={{\r\n              transform: `rotate(${guessPosition * Math.PI}rad)`,\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpectrumArc;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}